#!/usr/bin/env php
<?php

use Tivins\CIMachine\CIMachine;
use Tivins\CIMachine\GitLocation;
use Tivins\Core\Log\CLILogger;
use Tivins\Core\Log\Level;
use Tivins\Core\OptionArg;
use Tivins\Core\OptionsArgs;

require __dir__ . '/../vendor/autoload.php';

function usage()
{
    $cases = [];
    foreach (Level::cases() as $case) {
        $cases[] = "$case->value ($case->name)";
    }
    $cases = implode(', ', $cases);

    echo<<<EOF

    Usage: 
        cim --uri <uri> [options]

    General options :
        -h, --help                  Display this help.
        -v, --verbose <mode>        Verbose level : $cases.

    Machine options (build-time) :
        -p, --php <phpvers>         PHP version, ex: "8.1" or "latest". Default is "lastest".
        
    Repository options (run-time) :
        -u, --uri <uri>             [required] URI of the repository to check.
        -b, --branch <branch>       Branch. Default is "default".
        -c, --commit <commit>       Commit ID. Default is "HEAD". 

    Examples:
        cim --uri https://github.com/tivins/ci-example-1.git --php "7.4"
        cim --uri https://github.com/tivins/ci-example-1.git --php "8.1" --branch "test-php-8-1"


EOF;
}

$options = (new OptionsArgs())
    ->add(new OptionArg('u', true, 'uri'))
    ->add(new OptionArg('b', true, 'branch'))
    ->add(new OptionArg('c', true, 'commit'))
    ->add(new OptionArg('p', true, 'php'))
    ->add(new OptionArg('v', true, 'verbose'))
    ->add(new OptionArg('h', long: 'help'))
    ->parse();

$logger = new CLILogger();

if (isset($options['help'])) {
    usage();
    exit;
}

if (!isset($options['uri'])) {
    $logger->log(Level::DANGER, "URI is missing");
    usage();
    die();
}
if (isset($options['verbose'])) {
    $logger->setLevel(Level::tryFrom($options['verbose']) ?? Level::DANGER);
}

// -- run

$location = new GitLocation(
        $options['uri'],
        $options['branch'] ?? GitLocation::BRANCH_DEFAULT,
        $options['commit'] ?? GitLocation::COMMIT_DEFAULT,
);
$machine = new CIMachine($location);
$machine->setLogger($logger);
$machine->setPhpVersion($options['php'] ?? CIMachine::PHP_LATEST);
$machine->runBackupClose();
$logger->info($machine->getRealOutDir());
